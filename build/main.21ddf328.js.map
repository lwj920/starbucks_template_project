{"version":3,"sources":["js/main.js"],"names":["badgeEl","document","querySelector","toTopEl","window","addEventListener","_","throttle","scrollY","gsap","to","opacity","display","x","scrollTo","fadeEls","querySelectorAll","forEach","fadeEl","idx","delay","swiper","Swiper","direction","autoplay","loop","swiper2","slidesPerView","spaceBetween","centeredSlides","pagination","el","clickable","navigation","prevEl","nextEl","swiper3","promotionEl","promotionToggleBtn","isHidePromotion","random","min","max","parseFloat","Math","toFixed","floatingObjecr","selector","size","y","repeat","yoyo","ease","Power1","easeInOut","classList","add","remove","spyEls","spyEl","ScrollMagic","Scene","triggerElement","triggerHook","setClassToggle","addTo","Controller"],"mappings":";AAEA,IAAMA,EAAUC,SAASC,cAAc,kBAEjCC,EAAUF,SAASC,cAAc,WAEvCE,OAAOC,iBAAiB,SAAUC,EAAEC,SAAS,WAIvCH,OAAOI,QAAU,KAInBC,KAAKC,GAAGV,EAAS,GAAI,CACnBW,QAAU,EACVC,QAAU,SAEZH,KAAKC,GAAGP,EAAS,GAAI,CACnBU,EAAI,EACJF,QAAU,MAIZF,KAAKC,GAAGV,EAAS,GAAI,CACnBW,QAAU,EACVC,QAAU,UAEZH,KAAKC,GAAGP,EAAS,GAAI,CACnBU,EAAI,QAGP,MAGHV,EAAQE,iBAAiB,QAAQ,WAC/BI,KAAKC,GAAGN,OAAO,GAAG,CAChBU,SAAW,MAMf,IAAMC,EAAUd,SAASe,iBAAiB,qBAC1CD,EAAQE,QAAQ,SAASC,EAAQC,GAG/BV,KAAKC,GAAGQ,EAAQ,EAAG,CAGjBE,MAAoB,IAAXD,EAAM,GACfR,QAAU,MAKd,IAAMU,EAAS,IAAIC,OAAO,uBAAwB,CAChDC,UAAY,WACZC,UAAW,EACXC,MAAO,IAGHC,EAAU,IAAIJ,OAAO,qBAAsB,CAE/CK,cAAe,EACfC,aAAc,GACdC,gBAAgB,EAChBJ,MAAM,EACND,SAAU,CACRJ,MAAO,KAETU,WAAY,CACVC,GAAI,gCACJC,WAAW,GAEbC,WAAY,CACVC,OAAQ,iCACRC,OAAQ,oCAINC,EAAU,IAAId,OAAO,kBAAkB,CAC3CE,UAAW,EACXC,MAAO,EACPG,aAAe,GACfD,cAAgB,EAChBM,WAAa,CACXC,OAAS,8BACTC,OAAS,iCAKPE,EAAcpC,SAASC,cAAc,cACrCoC,EAAqBrC,SAASC,cAAc,6BAE9CqC,GAAkB,EAetB,SAASC,EAAOC,EAAKC,GAEnB,OAAOC,YAAYC,KAAKJ,UAAYE,EAAID,GAAOA,GAAKI,QAAQ,IAM9D,SAASC,EAAeC,EAAU3B,EAAO4B,GACvCvC,KAAKC,GAAGqC,EAAUP,EAAO,IAAK,KAAM,CAClCS,EAAID,EACJE,QAAU,EACVC,MAAO,EACPC,KAAOC,OAAOC,UACdlC,MAAQoB,EAAO,EAAGpB,KA3BtBkB,EAAmBjC,iBAAiB,QAAQ,YAC1CkC,GAAmBA,GAEjBF,EAAYkB,UAAUC,IAAI,QAE1BnB,EAAYkB,UAAUE,OAAO,UAyBjCX,EAAe,aAAa,EAAG,IAC/BA,EAAe,aAAa,GAAK,IACjCA,EAAe,aAAa,IAAK,IAGjC,IAAMY,EAAOzD,SAASe,iBAAiB,sBACvC0C,EAAOzC,QAAQ,SAAS0C,GAGtB,IAAIC,YACHC,MAAM,CAELC,eAAeH,EAGfI,YAAc,KAEfC,eAAeL,EAAO,QACtBM,MAAM,IAAIL,YAAYM","file":"main.21ddf328.js","sourceRoot":"..","sourcesContent":["\r\n// badges\r\nconst badgeEl = document.querySelector('header .badges');\r\n// topBtn\r\nconst toTopEl = document.querySelector('#to-top');\r\n\r\nwindow.addEventListener('scroll', _.throttle(() => {\r\n  // console.log(window.scrollY);\r\n  // 배지를 보이거나 안 보이게 처리\r\n  // 스크롤 값이 500이상이면 안 보이고, 이하이면 보이게\r\n  if( window.scrollY > 500) {\r\n    // badgeEl.style.display = 'none';\r\n    // gsap은 lib, 동작(애니메이션)\r\n    // gsap.to(요소, 지속시간, {옵션})\r\n    gsap.to(badgeEl, .6, {\r\n      opacity : 0,\r\n      display : 'none'\r\n    });\r\n    gsap.to(toTopEl, .7, {\r\n      x : 0,\r\n      opacity : 1\r\n    });\r\n  } else {\r\n    // badgeEl.style.display = 'block'; \r\n    gsap.to(badgeEl, .6, {\r\n      opacity : 1,\r\n      display : 'block'\r\n    });\r\n    gsap.to(toTopEl, .7, {\r\n      x : 100\r\n    });\r\n  };\r\n}, 300));\r\n\r\n/* to-top 버튼 클릭 이벤트*/\r\ntoTopEl.addEventListener('click',()=>{\r\n  gsap.to(window,.7,{\r\n    scrollTo : 0\r\n  });\r\n});\r\n\r\n// 순차적 visual 안의 요소를 보여줌\r\n// 이미지 부분 그룹처리(fade--in)\r\nconst fadeEls = document.querySelectorAll('.visual .fade--in');\r\nfadeEls.forEach(function(fadeEl, idx){\r\n  // console.log(fadeEl, idx)\r\n  // gsap.to(요소, 지속시간, {옵션})\r\n  gsap.to(fadeEl, 1, {\r\n    // idx 범위 0,1,2,3\r\n    // 0.7, 1.4, 2.1, 2.8\r\n    delay : (idx + 1) * .7,\r\n    opacity : 1\r\n  });\r\n});\r\n\r\n// notice swiper\r\nconst swiper = new Swiper('.notice-line .swiper', {\r\n  direction : \"vertical\",\r\n  autoplay : true,\r\n  loop : true\r\n});\r\n\r\nconst swiper2 = new Swiper('.promotion .swiper' ,{\r\n  // direction: 'horizontal',\r\n  slidesPerView: 3, // 보여줄 요소 3개\r\n  spaceBetween: 10, // 슬라이드 사이의 여백\r\n  centeredSlides: true, // 1번 슬라이드 가운데\r\n  loop: true,\r\n  autoplay: {\r\n    delay: 5000\r\n  },\r\n  pagination: {\r\n    el: '.promotion .swiper-pagination',\r\n    clickable: true\r\n  },\r\n  navigation: {\r\n    prevEl: '.promotion .swiper-button-prev',\r\n    nextEl: '.promotion .swiper-button-next'\r\n  }\r\n});\r\n\r\nconst swiper3 = new Swiper('.awards .swiper',{\r\n  autoplay : true,\r\n  loop : true,\r\n  spaceBetween : 30,\r\n  slidesPerView : 5,\r\n  navigation : {\r\n    prevEl : '.awards .swiper-button-prev',\r\n    nextEl : '.awards .swiper-button-next'\r\n  }\r\n});\r\n\r\n// 토글버튼 클릭 시 promotion 닫힘 & 열림\r\nconst promotionEl = document.querySelector('.promotion');\r\nconst promotionToggleBtn = document.querySelector('.notice .toggle-promotion');\r\n\r\nlet isHidePromotion = false;\r\n\r\npromotionToggleBtn.addEventListener('click',()=>{\r\n  isHidePromotion = !isHidePromotion;\r\n  if(isHidePromotion){\r\n    promotionEl.classList.add('hide')\r\n  } else{\r\n    promotionEl.classList.remove('hide')\r\n  }\r\n});\r\n\r\n\r\n\r\n// youtube 영역 내의 이미지 처리\r\n// 범위 내의 숫자를 랜덤 함수(숫자 2자리까지)\r\nfunction random(min, max){\r\n  // .toFixed()를 통해 반환된 문자 데이터를 parseFloat()을 통해 소수점을 가져오는 숫자 데이터로 반환\r\n  return parseFloat((Math.random() * (max-min) + min).toFixed(2));\r\n}\r\n\r\n// 유튜브 위에 이미지 추가 애니매이션 효과\r\n// gsap 애니메이션\r\n// gsap.to(요소, 시간, {옵션})\r\nfunction floatingObjecr(selector, delay, size){\r\n  gsap.to(selector, random(1.5, 2.5), {\r\n    y : size,\r\n    repeat : -1,    // 무한 반복\r\n    yoyo : true,    // 1번 재생한 애니메이션을 다시 실행\r\n    ease : Power1.easeInOut,    // gsap의 easing 효과\r\n    delay : random(0, delay)\r\n  });\r\n};\r\nfloatingObjecr('.floating1',1, 15);\r\nfloatingObjecr('.floating2',0.5, 15);\r\nfloatingObjecr('.floating3',1.5, 20);\r\n\r\n// scrollMagic cdn\r\nconst spyEls=document.querySelectorAll('section.scroll-spy');\r\nspyEls.forEach(function(spyEl){\r\n  // Scene() 메서드를 통해서 객체들의 변화에 대한 검사\r\n  // addTo() 메서드를 사용하기 위한 옵션 정의\r\n  new ScrollMagic\r\n  .Scene({\r\n    // 보여질 여부를 검사하는 요소 지정\r\n    triggerElement:spyEl,\r\n    // 화면의 높이를 0에서 1이라 보고 0.8위치에 적용\r\n    // 기능이 걸려 있는 부분(실행위치)\r\n    triggerHook : 0.8\r\n  })\r\n  .setClassToggle(spyEl, 'show')\r\n  .addTo(new ScrollMagic.Controller());\r\n});\r\n"]}